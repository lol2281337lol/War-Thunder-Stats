from flask import Flask, jsonify
from flask_cors import CORS
from selenium import webdriver
import time
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver import ActionChains

app = Flask(__name__)
CORS(app)

def read_file():
    with open('all_prems+market.txt', 'r', encoding='utf-8') as f:
        vehicles_data = f.read().splitlines()
        vehicles_data = [dict(zip(['name', 'price', 'currency'], line.split(';'))) for line in vehicles_data]
    print (f'{vehicles_data}')
    return vehicles_data

@app.route('/fetch-data/<account>', methods=['GET'])
def fetch_data(account):
    url = f'https://thunderskill.com/ru/stat/{account}/vehicles/a#type=army&role=all&country=all'
    #Для просмотра куда кликает скрипт
    #url = f'https://chowderman.github.io/xp-paint.html'
    vehicles_data = read_file()

    options = webdriver.ChromeOptions()

    #Отключение загрузки изображений (капча детектит)
    #prefs = {"profile.managed_default_content_settings.images": 2}
    #options.add_experimental_option("prefs", prefs)

    #Выключение отображения браузера
    #options.add_argument("--headless")
    
    options.add_argument("--incognito")
    options.add_argument("start-minimized")
    options.add_argument('--disable-blink-features=AutomationControlled')
    options.add_argument("--disable-extensions")
    options.add_experimental_option("excludeSwitches", ["enable-automation"])
    options.add_experimental_option('useAutomationExtension', False)


    driver = webdriver.Chrome(options=options)
    driver.set_window_size(768, 450)
    driver.execute_cdp_cmd("Page.addScriptToEvaluateOnNewDocument", {
        'source': '''
                delete window.cdc_adoQpoasnfa76pfcZLmcfl_Array;
                delete window.cdc_adoQpoasnfa76pfcZLmcfl_Promise;
                delete window.cdc_adoQpoasnfa76pfcZLmcfl_Symbol;
          '''
    })


    try:
        driver.get(url)
        actions = ActionChains(driver)
        actions.move_by_offset(55, 290)
        
        while True:
            if 'zaartix@yandex.ru' in driver.page_source:
                break
            else:
                actions.click().perform()
                #print ('клик')
                time.sleep(0.3)
        data = driver.page_source

    except Exception as err:
        print(f'Error occurred: {err}')
        return jsonify(error='Failed to fetch data'), 500
    else:
        driver.quit()
        response_data = {
            "data": [data],
            "vehiclesData": vehicles_data
        }
        return jsonify(response_data)
    
if __name__ == "__main__":
    app.run(port=3000)
