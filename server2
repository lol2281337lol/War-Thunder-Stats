from flask import Flask, jsonify, request
from flask_cors import CORS
from selenium import webdriver
import time
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.common.by import By
from selenium.webdriver.support import expected_conditions as EC

app = Flask(__name__)
CORS(app)

def read_file():
    with open('all_prems+market.txt', 'r', encoding='utf-8') as f:
        vehicles_data = f.read().splitlines()
        vehicles_data = [dict(zip(['name', 'price', 'currency'], line.split(';'))) for line in vehicles_data]
    print (f'{vehicles_data}')
    return vehicles_data

@app.route('/fetch-data/<account>', methods=['GET'])
def fetch_data(account):
    url = f'https://thunderskill.com/ru/stat/{account}/vehicles/a#type=army&role=all&country=all'
    vehicles_data = read_file()

    options = webdriver.ChromeOptions()
    options.add_argument("start-maximized")
    options.add_argument('--disable-blink-features=AutomationControlled')
    #options.add_argument("--headless")
    options.add_experimental_option("excludeSwitches", ["enable-automation"])
    options.add_experimental_option('useAutomationExtension', False)
    driver = webdriver.Chrome(options=options)
    driver.execute_cdp_cmd("Page.addScriptToEvaluateOnNewDocument", {
        'source': '''
                delete window.cdc_adoQpoasnfa76pfcZLmcfl_Array;
                delete window.cdc_adoQpoasnfa76pfcZLmcfl_Promise;
                delete window.cdc_adoQpoasnfa76pfcZLmcfl_Symbol;
          '''
    })
    
    try:
        driver.get(url)
        while True:
            if 'zaartix@yandex.ru' in driver.page_source:
                break
            else:
                time.sleep(0.1)        
        # time.sleep(10)
        # # WebDriverWait(driver, 10).until(EC.presence_of_element_located((By.XPATH, '//div[text()="dev: zaartix@yandex.ru"]')))
        # WebDriverWait(driver, timeout=10).until(EC.text_to_be_present_in_element((By.XPATH, '...'), 'zaartix@yandex.ru'))
        
        data = driver.page_source
        # time.sleep(600)
    except Exception as err:
        print(f'Error occurred: {err}')
        return jsonify(error='Failed to fetch data'), 500
    else:
        driver.quit()
        response_data = {
            "data": [data],
            "vehiclesData": vehicles_data
        }
        return jsonify(response_data)
    
if __name__ == "__main__":
    app.run(port=3000)
